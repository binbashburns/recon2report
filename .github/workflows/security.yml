name: Security Scans

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '0 6 * * 1'

permissions:
  contents: read
  security-events: write
  actions: read
  checks: read

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [csharp]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  dependency-audit:
    name: Dependency Vulnerability Audit
    runs-on: ubuntu-latest
    needs: codeql

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Check for vulnerable packages
        id: vuln
        run: |
          dotnet list package --vulnerable --include-transitive | tee vuln-report.txt
          if grep -q "has no vulnerable packages" vuln-report.txt; then
            echo "status=clean" >> "$GITHUB_OUTPUT"
          else
            echo "status=issues" >> "$GITHUB_OUTPUT"
            exit 1
          fi

      - name: Upload vulnerability report
        if: failure() || steps.vuln.outputs.status == 'clean'
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-vulnerability-report
          path: vuln-report.txt
