{
  "service": "password-cracking",
  "description": "Hash cracking for various Windows authentication protocols",
  "ports": [],
  "serviceNames": [],
  "targetOs": ["windows", "linux"],
  "vectors": [
    {
      "id": "crack-lm",
      "name": "Crack LM Hash",
      "phase": "credential_access",
      "prerequisites": ["hash_obtained"],
      "description": "Crack LM (LAN Manager) password hashes using john or hashcat",
      "commands": [
        {
          "tool": "john",
          "command": "john --format=lm hash.txt --wordlist=<rockyou.txt>",
          "description": "Crack LM hash with john"
        },
        {
          "tool": "hashcat",
          "command": "hashcat -m 3000 -a 0 hash.txt <rockyou.txt>",
          "description": "Crack LM hash with hashcat"
        }
      ],
      "outcomes": ["credential_access"]
    },
    {
      "id": "crack-ntlm",
      "name": "Crack NTLM Hash",
      "phase": "credential_access",
      "prerequisites": ["hash_obtained"],
      "description": "Crack NTLM (NT) password hashes using john or hashcat",
      "commands": [
        {
          "tool": "john",
          "command": "john --format=nt hash.txt --wordlist=<rockyou.txt>",
          "description": "Crack NTLM hash with john"
        },
        {
          "tool": "hashcat",
          "command": "hashcat -m 1000 -a 0 hash.txt <rockyou.txt>",
          "description": "Crack NTLM hash with hashcat"
        }
      ],
      "outcomes": ["credential_access"]
    },
    {
      "id": "crack-ntlmv1",
      "name": "Crack NTLMv1 Challenge-Response",
      "phase": "credential_access",
      "prerequisites": ["hash_obtained"],
      "description": "Crack NTLMv1 challenge-response hashes captured from network authentication",
      "commands": [
        {
          "tool": "john",
          "command": "john --format=netntlm hash.txt --wordlist=<rockyou.txt>",
          "description": "Crack NTLMv1 with john"
        },
        {
          "tool": "hashcat",
          "command": "hashcat -m 5500 -a 0 hash.txt <rockyou.txt>",
          "description": "Crack NTLMv1 with hashcat"
        },
        {
          "tool": "crack.sh",
          "command": "Visit https://crack.sh/ and submit hash",
          "description": "Online NTLMv1 cracking service"
        }
      ],
      "outcomes": ["credential_access"]
    },
    {
      "id": "crack-ntlmv2",
      "name": "Crack NTLMv2 Challenge-Response",
      "phase": "credential_access",
      "prerequisites": ["hash_obtained"],
      "description": "Crack NTLMv2 challenge-response hashes captured from network authentication",
      "commands": [
        {
          "tool": "john",
          "command": "john --format=netntlmv2 hash.txt --wordlist=<rockyou.txt>",
          "description": "Crack NTLMv2 with john"
        },
        {
          "tool": "hashcat",
          "command": "hashcat -m 5600 -a 0 hash.txt <rockyou.txt>",
          "description": "Crack NTLMv2 with hashcat"
        }
      ],
      "outcomes": ["credential_access"]
    },
    {
      "id": "crack-kerberos-tgs",
      "name": "Crack Kerberos TGS (Kerberoasting)",
      "phase": "credential_access",
      "prerequisites": ["hash_obtained"],
      "description": "Crack Kerberos 5 TGS-REP (RC4) hashes obtained from kerberoasting",
      "commands": [
        {
          "tool": "john",
          "command": "john --format=krb5tgs hash.txt --wordlist=<rockyou.txt>",
          "description": "Crack TGS hash with john"
        },
        {
          "tool": "hashcat",
          "command": "hashcat -m 13100 -a 0 hash.txt <rockyou.txt>",
          "description": "Crack TGS RC4 hash with hashcat"
        }
      ],
      "outcomes": ["credential_access"]
    },
    {
      "id": "crack-kerberos-tgs-aes",
      "name": "Crack Kerberos TGS AES128",
      "phase": "credential_access",
      "prerequisites": ["hash_obtained"],
      "description": "Crack Kerberos 5 TGS-REP AES128 hashes (stronger encryption)",
      "commands": [
        {
          "tool": "hashcat",
          "command": "hashcat -m 19600 -a 0 hash.txt <rockyou.txt>",
          "description": "Crack TGS AES128 hash"
        }
      ],
      "outcomes": ["credential_access"]
    },
    {
      "id": "crack-kerberos-asrep",
      "name": "Crack Kerberos AS-REP (AS-REP Roasting)",
      "phase": "credential_access",
      "prerequisites": ["hash_obtained"],
      "description": "Crack Kerberos 5 AS-REP hashes from accounts with pre-authentication disabled",
      "commands": [
        {
          "tool": "hashcat",
          "command": "hashcat -m 18200 -a 0 hash.txt <rockyou.txt>",
          "description": "Crack AS-REP hash"
        }
      ],
      "outcomes": ["credential_access"]
    },
    {
      "id": "crack-mscache2",
      "name": "Crack MS-Cache v2 (Domain Cached Credentials)",
      "phase": "credential_access",
      "prerequisites": ["hash_obtained"],
      "description": "Crack MS-Cache v2 (DCC2) hashes - very slow to crack",
      "commands": [
        {
          "tool": "hashcat",
          "command": "hashcat -m 2100 -a 0 hash.txt <rockyou.txt>",
          "description": "Crack MS-Cache v2 hash (slow)"
        }
      ],
      "outcomes": ["credential_access"]
    },
    {
      "id": "crack-timeroast",
      "name": "Crack Timeroast Hash",
      "phase": "credential_access",
      "prerequisites": ["hash_obtained"],
      "description": "Crack timeroast hashes obtained from time synchronization abuse",
      "commands": [
        {
          "tool": "hashcat",
          "command": "hashcat -m 31300 -a 3 hash.txt -w 3 ?l?l?l?l?l?l?l",
          "description": "Crack timeroast hash with mask attack"
        }
      ],
      "outcomes": ["credential_access"]
    },
    {
      "id": "crack-sccm-pxe",
      "name": "Crack SCCM PXE Hash",
      "phase": "credential_access",
      "prerequisites": ["hash_obtained"],
      "description": "Crack SCCM PXE boot media passwords",
      "commands": [
        {
          "tool": "hashcat",
          "command": "hashcat -m 19850 -a 0 hash.txt <rockyou.txt>",
          "description": "Crack SCCM PXE hash"
        }
      ],
      "outcomes": ["credential_access"]
    },
    {
      "id": "crack-dpapi-masterkey",
      "name": "Crack DPAPI Master Key",
      "phase": "credential_access",
      "prerequisites": ["hash_obtained"],
      "description": "Crack user's DPAPI master key to decrypt stored credentials",
      "commands": [
        {
          "tool": "DPAPImk2john.py",
          "command": "DPAPImk2john.py --preferred <prefered_file>",
          "description": "Convert DPAPI master key to john format"
        },
        {
          "tool": "DPAPImk2john.py",
          "command": "DPAPImk2john.py -c domain -mk <masterkey> -S <sid>",
          "description": "Crack domain user DPAPI master key"
        }
      ],
      "outcomes": ["credential_access"]
    }
  ]
}
